<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
        http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
    version="3.0">

  <description>Hawtio plugin for managing batch jobs using jsr352</description>
  <display-name>hawt.io jbatch plugin</display-name>
  
  <!-- This must be in hawtio-web
  <env-entry>
    <description>Enable/disable hawtio's authentication filter, value is really a boolean</description>
    <env-entry-name>hawtio/authenticationEnabled</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value>true</env-entry-value>
  </env-entry>
  
  <env-entry>
    <description>Authorized user role, empty string disables authorization</description>
    <env-entry-name>hawtio/role</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>    
    <env-entry-value>*</env-entry-value>
  </env-entry>
  
  <env-entry>
    <description>JAAS realm used to authenticate users</description>
    <env-entry-name>hawtio/realm</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value>*</env-entry-value>
  </env-entry>
  
    <env-entry>
      <description>JAAS classname that would contain the role principal, empty string disables authorization</description>
      <env-entry-name>hawtio/rolePrincipalClasses</env-entry-name>
      <env-entry-type>java.lang.String</env-entry-type>
      <env-entry-value>org.jboss.security.SimplePrincipal</env-entry-value>
    </env-entry>
    -->
    
    <!--    <env-entry>
    <description>Enable/disable Keycloak integration. Value is really a boolean</description>
    <env-entry-name>hawtio/keycloakEnabled</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value>true</env-entry-value>
    </env-entry>-->

    <!--authorization-->
    
    <!--Zbytec-->
    <!--    <context-param>
        <param-name>resteasy.role.based.security</param-name>
        <param-value>true</param-value>
    </context-param>-->
    
    <!--Zbytecny?-->
    <security-role>
        <description/>
        <role-name>user</role-name>
    </security-role>
    <security-role>
        <description/>
        <role-name>admin</role-name>
    </security-role>
    <security-role>
        <description/>
        <role-name>supervisor</role-name>
    </security-role>
    
    <!--    <security-constraint>
        <web-resource-collection>
            <web-resource-name>All resources</web-resource-name>
            <url-pattern>/*</url-pattern>
        </web-resource-collection>
    </security-constraint>-->
    
<!--    <filter>
        <filter-name>AuthenticationFilter</filter-name>
        <filter-class>io.hawt.web.AuthenticationFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>AuthenticationFilter</filter-name>
        <url-pattern>/rest/*</url-pattern>         
    </filter-mapping>-->
    
    <filter>
        <filter-name>AuthFilter</filter-name>
        <filter-class>muni.fi.dp.jz.jbatch.webservice.AuthFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>AuthFilter</filter-name>
        <url-pattern>/rest/*</url-pattern>         
    </filter-mapping>
    
    <!-- Common JAX-RS Servlet Definition -->
<!--    <servlet>
        <servlet-name>AppConfig</servlet-name>
        <servlet-class>muni.fi.dp.jz.jbatch.webservice.AppConfig</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>AppConfig</servlet-name>
        <url-pattern>/rest/*</url-pattern>
    </servlet-mapping>-->
    
    <!--To use cookie based session-tracking if available and URL based session-tracking as a fallback-->
    <session-config>
        <tracking-mode>COOKIE</tracking-mode>
        <tracking-mode>URL</tracking-mode>
    </session-config>

    
<!--    <security-constraint>
        <web-resource-collection>
            <web-resource-name>JBatch</web-resource-name>
            <url-pattern>/rest/cli/start/*</url-pattern>
            <url-pattern>/rest/jobs/restart/*</url-pattern>
            <url-pattern>/rest/jobs/stop/*</url-pattern>
            <url-pattern>/rest/jobs/abandon/*</url-pattern>            
            <http-method>GET</http-method>
            <http-method>POST</http-method>
        </web-resource-collection>
        <auth-constraint>-->
            <!--Listing all roles here and doing the actual mapping with @RolesAllowed annotations in webservice package-->
<!--            <role-name>admin</role-name>
            <role-name>user</role-name>
            <role-name>supervisor</role-name>
        </auth-constraint>
    </security-constraint>-->
    
    <!--Must-->
    <login-config>
        <auth-method>BASIC</auth-method>
        <realm-name>ApplicationRealm</realm-name>
    </login-config>
    
    <!--Redirect to hawtio's login page with using login.jsp-->
    <!--    <login-config>
        <auth-method>FORM</auth-method>
        <form-login-config>
            <form-login-page>/login.jsp</form-login-page>   
            <form-error-page>/fail_login.html</form-error-page>         
        </form-login-config>
    </login-config>-->


    <!--Hawt.io-->
    <context-param>
        <description>Plugin's path on the server</description>
        <param-name>plugin-context</param-name>
        <param-value>${plugin-context}</param-value>
    </context-param>

    <context-param>
        <description>Plugin's path on the server</description>
        <param-name>plugin-name</param-name>
        <param-value>${project.artifactId}</param-value>
    </context-param>

    <context-param>
        <description>Plugin's path on the server</description>
        <param-name>plugin-domain</param-name>
        <param-value>${plugin-domain}</param-value>
    </context-param>

    <context-param>
        <description>Plugin's path on the server</description>
        <param-name>plugin-scripts</param-name>
        <param-value>${plugin-scripts}</param-value>
    </context-param>

    <listener>
        <listener-class>muni.fi.dp.jz.jbatch.hawtio.PluginContextListener</listener-class>        
    </listener>
        
    <listener>
        <listener-class>muni.fi.dp.jz.jbatch.hawtio.SessionWatcher</listener-class>
    </listener>

</web-app>

